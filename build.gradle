buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    // bintray
    id "com.jfrog.bintray" version "1.7.3"
}

ext {
    springVersion = "4.3.10.RELEASE"
}

allprojects {
    group 'org.tmurakam'
    version '1.0.1'

    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    configurations {
        provided
    }

    sourceSets {
        main.compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
        test.runtimeClasspath += configurations.provided
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
//apply plugin: 'signing'
apply plugin: 'idea'

apply plugin: 'com.jfrog.bintray'

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

dependencies {
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-web:$springVersion"

    compile "org.springframework.session:spring-session:1.3.0.RELEASE"

    compile('org.springframework.data:spring-data-mongodb:1.10.1.RELEASE') {
        exclude module: 'mongo-java-driver'
    }
    compile 'org.mongodb:mongodb-driver:3.4.2'

    provided "javax.servlet:javax.servlet-api:3.0.1"

    testCompile "org.springframework:spring-test:$springVersion"
    testCompile 'junit:junit:4.12'
    //testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.assertj:assertj-core:3.6.2'
}

test {
    exclude '**/*IT.class'
}

task integrationTest(type: Test) {
    include '**/*IT.class'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

jar.dependsOn sourcesJar, javadocJar

//signing {
//    sign configurations.archives
//}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mod1(MavenPublication) {
            artifactId 'spring-session-mongodb'

            from components.java
            artifact sourcesJar
            artifact javadocJar

            // for maven central POM
            final customPom = {
                packaging "jar"
                name "Spring Session MongoDB"
                url "https://github.com/tmurakam/spring-session-mongodb"
                description "Spring session with MongoDB backend"
                licenses {
                    license {
                        name "BSD License"
                        url "https://github.com/tmurakam/spring-session-mongodb/blob/master/LICENSE.txt"
                        distribution 'repo'
                    }
                }
                scm {
                    url "https://github.com/tmurakam/spring-session-mongodb"
                    connection "scm:git:https://github.com/tmurakam/spring-session-mongodb.git"
                }
                developers {
                    developer {
                        id "tmurakam"
                        name "Takuya Murakami"
                        email "tmurakam@tmurakam.org"
                    }
                }
            }
            customPom.resolveStrategy = Closure.DELEGATE_FIRST

            pom.withXml { xml ->
                final root = xml.asNode()
                root.children().last() + customPom
            }
        }
    }
}

bintray {
    user = project.hasProperty("bintrayUser") ? bintrayUser : ""
    key = project.hasProperty("bintrayKey") ? bintrayKey : ""
    publications = ["mod1"]
    publish = true
    pkg {
        repo = 'maven'
        name = 'spring-session-mongodb'
        //userOrg = 'bintray_user'
        //licenses = ['BSD']
        //vcsUrl = 'https://github.com/tmurakam/spring-session-mongodb.git'
    }
}

import groovyx.net.http.HTTPBuilder
import static groovyx.net.http.ContentType.*
import static groovyx.net.http.Method.*

task signBintrayPackage {
    doLast {
        final http = new HTTPBuilder(bintray.apiUrl)

        http.auth.basic bintrayUser, bintrayKey

        http.request(POST, JSON) {
            uri.path = "/gpg/${bintrayUser}/${bintray.pkg.repo}/${bintray.pkg.name}/versions/${project.version}"

            body = [passphrase: signKeyPassphrase]

            response.success = { resp ->
                logger.info("Signed version ${project.version}.")
            }
            response.failure = { resp ->
                throw new GradleException("Could not sign version ${project.version}: $resp.statusLine")
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.1'
}
